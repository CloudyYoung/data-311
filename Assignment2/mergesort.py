## DATA 311


from time import process_time as timer


# Merge Sort

def mergesort(arr):

    start_time = timer()

    sort = arr[:]
    _mergesort(sort, 0, len(sort) - 1, [None] * len(sort))
    
    end_time = timer()

    print("== Merge Sort %s Elements," % len(sort), "runs %s seconds" % (end_time - start_time))
    return sort

def _mergesort(arr, left, right, arr2): # add arr2 as a temporary array for the entire time
    if left >= right:
        return

    middle = (left + right) // 2 # find middle point
    
    _mergesort(arr, left, middle, arr2) # divide
    _mergesort(arr, middle + 1, right, arr2) # divide
    _mergemerge(arr, left, right, arr2) # merge

def _mergemerge(arr, leftStart, rightEnd, arr2):
    
    leftEnd = (rightEnd + leftStart) // 2
    rightStart = leftEnd + 1

    index, right, left = leftStart, rightStart, leftStart

    while left <= leftEnd and right <= rightEnd: # limit the boundary
        if arr[left] <= arr[right]: # conquer
            arr2[index] = arr[left]
            left += 1
        else:
            arr2[index] = arr[right]
            right += 1
        index += 1 # move to next element position
    
    # if one side has any left-over elements, also add those elements to the temporary array
    while left <= leftEnd:
        arr2[index] = arr[left]
        left += 1
        index += 1

    # Only one of this and the above while loop will actually run because one side will always has left-over elements
    while right <= rightEnd:
        arr2[index] = arr[right]
        right += 1
        index += 1

    # Copy from temporary array back to original array
    for i in range(rightEnd + 1):
        arr[i] = arr2[i]




## Random Number Array - for testing
arr10 = [79, 99, 3, 79, 36, 2, 70, 23, 77, 53]
arr100 = [887, 984, 121, 163, 376, 37, 817, 714, 138, 825, 551, 616, 610, 245, 261, 261, 500, 767, 109, 11, 349, 519, 125, 810, 206, 75, 363, 899, 91, 941, 477, 620, 230, 581, 561, 303, 460, 379, 905, 190, 202, 85, 427, 356, 662, 239, 683, 968, 484, 278, 206, 471, 812, 121, 153, 888, 35, 851, 11, 808, 625, 613, 354, 125, 505, 22, 242, 128, 595, 188, 25, 880, 611, 633, 177, 970, 484, 46, 433, 82, 470, 573, 245, 402, 660, 742, 810, 613, 922, 851, 631, 627, 707, 765, 781, 118, 519, 744, 127, 303]
arr1000 = [2768, 799, 3038, 8483, 5773, 4181, 6561, 7250, 1820, 1213, 3566, 5795, 8560, 4850, 9968, 3363, 3713, 6488, 2204, 8973, 6597, 7923, 6975, 6429, 1123, 2862, 659, 3169, 8261, 595, 3797, 2955, 5484, 3285, 3539, 8166, 6013, 3264, 3253, 4365, 6622, 2530, 714, 14, 7611, 714, 4453, 3835, 3880, 6855, 6018, 288, 5421, 6201, 2895, 3478, 4797, 7216, 326, 5912, 4801, 3908, 7532, 6468, 2654, 9504, 1786, 9648, 7565, 2093, 6292, 3736, 9469, 4068, 1673, 9353, 9317, 6425, 4096, 9373, 2855, 4466, 3834, 48, 9506, 7824, 5632, 9249, 3581, 8449, 3287, 2863, 6789, 5827, 8429, 796, 2928, 5648, 6704, 9050, 7884, 1868, 7791, 1732, 1739, 3697, 6899, 3600, 7416, 1667, 2484, 8820, 3406, 2080, 6170, 7372, 8300, 8733, 244, 7357, 4610, 6836, 2199, 8102, 6867, 5329, 1149, 3879, 8659, 194, 4262, 6971, 5995, 8233, 6647, 8469, 400, 7360, 4144, 4960, 3543, 8869, 2113, 9417, 9110, 163, 4435, 6667, 8254, 3531, 5060, 9751, 8240, 3491, 8016, 7559, 2677, 4138, 4177, 3883, 7335, 7756, 9317, 4854, 5123, 638, 4782, 985, 6705, 1284, 695, 3924, 390, 5446, 327, 8482, 8063, 4876, 7144, 9417, 2003, 9440, 4590, 6673, 8337, 2095, 867, 6849, 8822, 809, 8199, 9592, 8711, 9293, 1034, 1818, 9213, 3429, 2, 3932, 2912, 6464, 3341, 7898, 1290, 2035, 1110, 6661, 5393, 394, 3059, 1760, 9166, 4051, 4522, 1, 590, 1689, 7244, 2101, 6709, 744, 7847, 3205, 7827, 3104, 7657, 7922, 2967, 7437, 6348, 7321, 1588, 543, 3861, 5918, 1237, 5538, 9622, 9122, 1519, 6458, 2012, 6888, 1447, 3888, 3114, 6917, 9969, 9936, 2994, 939, 9512, 9946, 5181, 9852, 7296, 2491, 1304, 7145, 8262, 9663, 801, 313, 2629, 3134, 9702, 7374, 7171, 5770, 3799, 7528, 1337, 1149, 4109, 9709, 867, 1583, 5866, 3600, 4097, 5433, 9568, 224, 6555, 3524, 7549, 1364, 2546, 4357, 9879, 9850, 6204, 9787, 2147, 4841, 3906, 5105, 104, 6520, 4571, 8820, 5372, 1650, 9707, 4998, 4567, 8402, 7514, 149, 1201, 1336, 2485, 9715, 5216, 3525, 1398, 3292, 8579, 5490, 3764, 8643, 2299, 5836, 5950, 2493, 7194, 8652, 9945, 4609, 81, 1657, 9754, 9693, 7553, 3301, 9150, 6706, 4633, 9484, 370, 4736, 3618, 9590, 5809, 4055, 481, 833, 6327, 2144, 2404, 6486, 1363, 2078, 714, 6300, 6155, 7372, 6588, 2497, 8315, 7735, 9716, 3663, 4216, 3303, 1164, 7710, 5016, 6971, 4899, 1076, 4772, 5909, 2443, 3088, 1827, 3065, 572, 6217, 5916, 7941, 4434, 834, 9176, 6078, 155, 9156, 9871, 9700, 8582, 3525, 6831, 4704, 9361, 798, 221, 3878, 4486, 4813, 5986, 7570, 2006, 6527, 7312, 4029, 4115, 4272, 5023, 6925, 8865, 8964, 3167, 2941, 9954, 2473, 2781, 1253, 1465, 9824, 9811, 1, 4028, 6303, 147, 2569, 1708, 2970, 4054, 8982, 9474, 3018, 6744, 9528, 9778, 5043, 5796, 29, 3488, 4559, 787, 4223, 459, 3333, 4013, 9115, 8899, 6657, 6836, 3186, 3719, 7694, 9214, 1754, 7676, 2043, 7058, 1636, 2913, 2744, 3967, 8504, 6718, 7742, 8545, 7822, 1535, 8246, 1328, 2379, 1257, 8365, 3379, 2581, 4535, 3025, 5581, 3540, 9924, 4709, 9042, 2152, 8158, 5653, 9987, 3662, 5765, 1369, 3879, 2323, 6710, 2848, 2316, 1013, 2372, 5833, 5145, 4262, 2900, 7517, 7823, 3699, 2194, 2106, 774, 2548, 937, 7041, 818, 3691, 5719, 8809, 4904, 7618, 5685, 304, 2258, 4232, 5418, 2700, 4941, 6065, 1225, 5382, 1678, 1536, 2909, 9968, 9920, 3074, 8789, 1287, 7172, 979, 6789, 4259, 9726, 490, 3293, 9929, 5602, 2881, 9318, 106, 5142, 7210, 4530, 5128, 4409, 567, 6904, 9301, 1014, 3205, 1154, 6085, 9049, 3160, 3674, 787, 8665, 81, 9807, 603, 5801, 2449, 2431, 8266, 4437, 2761, 7707, 1303, 321, 2651, 7360, 9120, 9043, 3728, 3573, 1112, 2237, 9416, 5017, 6516, 7738, 344, 8178, 6629, 5205, 9621, 9182, 2451, 9972, 1225, 7286, 3652, 1044, 8549, 3710, 2828, 7431, 7565, 8685, 5214, 2520, 5814, 8830, 5860, 6839, 6500, 4253, 8590, 8433, 1126, 4664, 1375, 2709, 5083, 8805, 7710, 3519, 7445, 2355, 3554, 5802, 7082, 390, 5450, 8040, 3548, 4261, 3674, 5763, 2196, 1643, 5054, 8948, 2936, 7554, 9956, 7778, 731, 33, 158, 6696, 3524, 5207, 8789, 4173, 4207, 4205, 9471, 3531, 768, 1787, 6688, 9872, 7474, 9732, 6815, 7474, 9320, 8358, 4024, 2325, 9172, 827, 7278, 643, 365, 285, 8049, 9698, 2716, 8115, 5896, 3586, 9360, 36, 5879, 2698, 5219, 182, 9448, 2126, 6068, 8628, 8703, 9848, 2893, 8450, 751, 5675, 5440, 6166, 7706, 3451, 907, 9379, 7782, 6306, 4284, 6964, 9349, 7757, 2797, 3677, 8848, 3188, 7322, 8962, 9954, 6088, 3400, 4929, 7744, 2052, 8652, 5646, 881, 6586, 2451, 8319, 9410, 192, 2367, 504, 2938, 9331, 5906, 1226, 7589, 5368, 3, 8745, 9678, 2414, 5905, 7250, 773, 2317, 2750, 6285, 414, 5727, 956, 2462, 2054, 2192, 9385, 7223, 443, 8476, 1457, 3781, 4373, 8486, 55, 1737, 8365, 6885, 6995, 4104, 1383, 5576, 1216, 6363, 3585, 9127, 1438, 4177, 4500, 5795, 9066, 8936, 9516, 3323, 3818, 2170, 6672, 8584, 3444, 541, 767, 9281, 6125, 1381, 7805, 2302, 2239, 4153, 3763, 3472, 6403, 879, 5112, 231, 745, 4808, 8687, 7652, 1020, 2423, 6032, 5448, 347, 5708, 6677, 5350, 8742, 1316, 7966, 6532, 9180, 1768, 2691, 6869, 5863, 1104, 8198, 639, 6247, 2451, 4532, 9412, 3786, 5317, 1072, 3602, 3586, 3463, 5536, 4500, 3399, 3520, 5509, 214, 8975, 396, 5811, 4341, 8526, 4771, 6831, 2413, 2090, 3683, 7662, 1764, 2334, 4561, 968, 249, 9062, 4899, 4472, 6751, 7222, 5349, 8009, 3856, 9336, 9204, 5006, 7475, 136, 4951, 2406, 3243, 6718, 6855, 8267, 3116, 1195, 9604, 5440, 8635, 2664, 7213, 694, 5863, 4226, 4226, 7287, 7306, 4796, 2750, 191, 9058, 6352, 9051, 8673, 5262, 5892, 8697, 694, 4402, 702, 6679, 8856, 1920, 6615, 442, 325, 868, 9064, 9344, 5520, 927, 2405, 906, 9673, 3183, 3253, 6790, 4519, 4607, 5280, 8291, 9696, 4052, 5544, 434, 7380, 5159, 3598, 5927, 5463, 6912, 7714, 7702, 1687, 2127, 690, 7161, 2918, 9687, 1853, 8429, 2239, 5442, 334, 6331, 9089, 3465, 9407, 600, 7435, 1164, 3387, 9201, 2111, 5601, 4059, 259, 2109, 5094, 485, 700, 3889, 6941, 3103, 4715, 1354, 6952, 4577, 3261, 9946, 888, 6698, 4726, 2254, 5100, 101, 3761, 4594, 9880, 2025, 2913, 5950, 7297, 4891, 3284, 4392, 9385, 1210, 2444, 3414, 2124, 2399, 792, 9370, 6694, 3466, 5305, 6432, 1574, 5735, 2812, 998]

print(mergesort(arr10), '\n\n')
print(mergesort(arr100), '\n\n')
print(mergesort(arr1000), '\n\n')
